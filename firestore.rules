rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - allow users to read their own profile and admins to read all
    match /users/{userId} {
      // Allow users to read their own profile
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to update their own profile (except role and isActive)
      allow update: if request.auth != null && request.auth.uid == userId
        && !('role' in request.resource.data.diff(resource.data).affectedKeys())
        && !('isActive' in request.resource.data.diff(resource.data).affectedKeys())
        && !('userId' in request.resource.data.diff(resource.data).affectedKeys())
        && !('email' in request.resource.data.diff(resource.data).affectedKeys())
        && !('createdAt' in request.resource.data.diff(resource.data).affectedKeys());
      
      // Allow admins to read all user profiles
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      
      // Allow admins to create new users
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      
      // Allow admins to update user profiles (including role and isActive)
      allow update: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
